{"version":3,"file":"static/js/699.4dac3550.chunk.js","mappings":"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","sources":["components/movie/MovieCard.js","components/movie/MovieCardV2.js","components/heading/Heading.js","components/movie/MovieList.js","components/trailer/Trailer.js","page/HomePage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { tmdbAPI } from \"../../apiConfig\";\r\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\r\n\r\nconst MovieCardStyles = styled.div`\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    (props.cate === \"upcoming\" ||\r\n      props.cate === \"top_rated\" ||\r\n      props.cate === \"now_playing\") &&\r\n    css`\r\n      height: 200px;\r\n    `};\r\n  ${(props) =>\r\n    props.cate === \"popular\" &&\r\n    css`\r\n      height: 250px;\r\n    `};\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  .image {\r\n    position: absolute;\r\n    inset: 0;\r\n    z-index: -1;\r\n  }\r\n  .overlay {\r\n    position: absolute;\r\n    inset: 0;\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n  img {\r\n    object-fit: cover;\r\n    background-position: center;\r\n  }\r\n  .card-item {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    background-color: rgba(255, 255, 255, 0);\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    padding: 10px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr 1fr;\r\n    align-items: center;\r\n    transition: all 0.25s linear;\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      inset: 0;\r\n      background: inherit;\r\n      backdrop-filter: blur(3px);\r\n      box-shadow: inset 0 0 2000px rgba(255, 255, 255, 0.1);\r\n      z-index: -1;\r\n    }\r\n  }\r\n  .item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0px 5px;\r\n    line-height: 1.3;\r\n    &-title {\r\n      font-weight: 500;\r\n      font-size: 18px;\r\n    }\r\n    &-since {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  .star {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .number {\r\n    font-size: 16px;\r\n  }\r\n  .icon-star {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n  &:hover > .card-item {\r\n    background: ${(props) => props.theme.redLight};\r\n  }\r\n`;\r\nconst MovieCard = ({ item, cate = \"upcoming\", className = \"\" }) => {\r\n  const { poster_path, title, vote_average, release_date, id } = item;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <MovieCardStyles\r\n      cate={cate}\r\n      className={className}\r\n      onClick={() => navigate(`/movie/${id}`)}\r\n    >\r\n      <div className=\"image\">\r\n        <div className=\"overlay\"></div>\r\n        <img src={tmdbAPI.image(poster_path)} alt=\"poster\" />\r\n      </div>\r\n      <div className=\"card-item\">\r\n        <span className=\"icon\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className=\"w-9 h-9\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z\"\r\n            />\r\n          </svg>\r\n        </span>\r\n        <div className=\"item\">\r\n          <span className=\"item-title\">{title}</span>\r\n          <span className=\"item-since\">{release_date}</span>\r\n        </div>\r\n        <div className=\"star\">\r\n          <span className=\"number\">{vote_average.toFixed(1)}</span>\r\n          <img src=\"/star.png\" alt=\"\" className=\"icon-star\" />\r\n        </div>\r\n      </div>\r\n    </MovieCardStyles>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n\r\nconst CardStyles = styled.div`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  .image {\r\n    position: absolute;\r\n    inset: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\nexport const CardSkeleton = ({ className }) => {\r\n  return (\r\n    <CardStyles className={className}>\r\n      <div className=\"image\">\r\n        <LoadingSkeleton\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          radius=\"10px\"\r\n        ></LoadingSkeleton>\r\n      </div>\r\n    </CardStyles>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { tmdbAPI } from \"../../apiConfig\";\r\nimport Button from \"../button/Button\";\r\n\r\nconst MovieCardV2Styles = styled.div`\r\n  ${(props) =>\r\n    props.cate === \"upcoming\" &&\r\n    css`\r\n      height: 200px;\r\n    `};\r\n  ${(props) =>\r\n    (props.cate === \"top_rated\" || props.cate === \"now_playing\") &&\r\n    css`\r\n      height: 400px;\r\n    `};\r\n  ${(props) =>\r\n    props.cate === \"popular\" &&\r\n    css`\r\n      height: 250px;\r\n    `};\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  padding: 10px;\r\n  transform: scale(1);\r\n  transition: all 0.2s linear;\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    animation: hover 0.2s linear;\r\n  }\r\n  @keyframes hover {\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(1.03);\r\n    }\r\n  }\r\n  .image {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 250px;\r\n  }\r\n  .star {\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 10;\r\n\r\n    border-radius: 50%;\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      inset: 0;\r\n      width: 85%;\r\n      height: 85%;\r\n      border-radius: 50%;\r\n      background-color: #0f0f0f;\r\n      z-index: -1;\r\n      transform: translate(7.5%, 7.5%);\r\n    }\r\n  }\r\n  .overlay {\r\n    position: absolute;\r\n    inset: 0;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    border-radius: 10px;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    object-position: top;\r\n    border-radius: 10px;\r\n  }\r\n  .card-item {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    background-color: rgba(255, 255, 255, 0);\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    padding: 12px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all 0.25s linear;\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      inset: 0;\r\n      background: inherit;\r\n      backdrop-filter: blur(3px);\r\n      box-shadow: inset 0 0 2000px rgba(255, 255, 255, 0.1);\r\n    }\r\n    .since {\r\n      font-size: 16px;\r\n      z-index: 1;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MovieCardV2 = ({ item, cate = \"upcoming\", className = \"\" }) => {\r\n  const { poster_path, title, vote_average, release_date, id } = item;\r\n  const navigate = useNavigate();\r\n  if (!item) return;\r\n\r\n  return (\r\n    <MovieCardV2Styles cate={cate} className={className}>\r\n      <div className=\"image\">\r\n        <span\r\n          className={`star ${\r\n            vote_average >= 8\r\n              ? \"bg-[#7dce13] \"\r\n              : vote_average >= 6.5\r\n              ? \"bg-[#E6B325]\"\r\n              : \"bg-[#EB4747]\"\r\n          }`}\r\n        >\r\n          {vote_average.toFixed(1)}\r\n        </span>\r\n        <div className=\"overlay\"></div>\r\n        <img src={tmdbAPI.image(poster_path)} alt=\"poster\" />\r\n        <div className=\"card-item\">\r\n          <span className=\"since\">{release_date}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full h-[130px] flex flex-col justify-between items-center pt-[15px]\">\r\n        <span className=\"flex justify-center font-semibold\">{title}</span>\r\n        <Button\r\n          className=\"w-full h-[50px]\"\r\n          onClick={() => navigate(`/movie/${id}`)}\r\n        >\r\n          Watch now\r\n        </Button>\r\n      </div>\r\n    </MovieCardV2Styles>\r\n  );\r\n};\r\n\r\nexport default MovieCardV2;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\r\n\r\nconst HeadingStyles = styled.h3`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n  margin-bottom: 30px;\r\n  line-height: 1;\r\n`;\r\nconst Heading = ({ children, className = \"\" }) => {\r\n  return <HeadingStyles className={className}>{children}</HeadingStyles>;\r\n};\r\n\r\nexport default Heading;\r\n\r\nexport const HeadingSkeleton = () => {\r\n  return (\r\n    <div className=\"w-full h-50px \">\r\n      <LoadingSkeleton width=\"100%\" height=\"100%\"></LoadingSkeleton>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MovieCard, { CardSkeleton } from \"./MovieCard\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbAPI } from \"../../apiConfig\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport MovieCardV2 from \"./MovieCardV2\";\r\nconst MovieListStyles = styled.div`\r\n  .upcoming {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 40px 0px;\r\n  }\r\n  .popular {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 40px;\r\n  }\r\n  .swiper {\r\n    display: flex;\r\n    gap: 40px 0px;\r\n    padding: 20px 0px;\r\n  }\r\n  .swiper-wrapper {\r\n    user-select: none;\r\n    width: 260px;\r\n  }\r\n`;\r\nconst MovieList = ({ type }) => {\r\n  const { data, error } = useSWR(tmdbAPI.getMovies(type), fetcher);\r\n  const isLoading = !data && !error;\r\n  if (!data) return;\r\n  const movies = data?.results || [];\r\n  if (type === \"upcoming\") {\r\n    return (\r\n      <MovieListStyles>\r\n        {isLoading && (\r\n          <>\r\n            <CardSkeleton className=\"h-[200px] mb-[40px]\"></CardSkeleton>\r\n            <CardSkeleton className=\"h-[200px] mb-[40px]\"></CardSkeleton>\r\n            <CardSkeleton className=\"h-[200px] mb-[40px]\"></CardSkeleton>\r\n          </>\r\n        )}\r\n        {!isLoading && (\r\n          <div className=\"upcoming\">\r\n            {movies.length > 0 &&\r\n              type === \"upcoming\" &&\r\n              movies\r\n                .slice(0, 5)\r\n                .map((item) => (\r\n                  <MovieCard\r\n                    key={item.id}\r\n                    item={item}\r\n                    cate=\"upcoming\"\r\n                  ></MovieCard>\r\n                ))}\r\n          </div>\r\n        )}\r\n      </MovieListStyles>\r\n    );\r\n  }\r\n  if (type === \"popular\") {\r\n    return (\r\n      <MovieListStyles>\r\n        {isLoading && (\r\n          <div className=\"grid grid-cols-2 gap-x-[40px]\">\r\n            <CardSkeleton className=\"h-[250px]\"></CardSkeleton>\r\n            <CardSkeleton className=\"h-[250px]\"></CardSkeleton>\r\n          </div>\r\n        )}\r\n        {!isLoading && (\r\n          <div className=\"popular\">\r\n            {movies.length > 0 &&\r\n              type === \"popular\" &&\r\n              movies\r\n                .slice(0, 2)\r\n                .map((item) => (\r\n                  <MovieCard\r\n                    key={item.id}\r\n                    item={item}\r\n                    cate=\"popular\"\r\n                  ></MovieCard>\r\n                ))}\r\n          </div>\r\n        )}\r\n      </MovieListStyles>\r\n    );\r\n  }\r\n  if (type === \"top_rated\") {\r\n    return (\r\n      <MovieListStyles>\r\n        {isLoading && (\r\n          <div className=\"grid grid-cols-3 gap-x-[40px]\">\r\n            <CardSkeleton className=\"h-[200px]\"></CardSkeleton>\r\n            <CardSkeleton className=\"h-[200px]\"></CardSkeleton>\r\n            <CardSkeleton className=\"h-[200px]\"></CardSkeleton>\r\n          </div>\r\n        )}\r\n        {!isLoading && (\r\n          <div className=\"rate\">\r\n            <Swiper\r\n              grabCursor={\"true\"}\r\n              spaceBetween={20}\r\n              slidesPerView={\"auto\"}\r\n            >\r\n              {movies.length > 0 &&\r\n                type === \"top_rated\" &&\r\n                movies.map((item) => (\r\n                  <SwiperSlide key={item.id}>\r\n                    <MovieCardV2 item={item} cate=\"top_rated\"></MovieCardV2>\r\n                  </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n          </div>\r\n        )}\r\n      </MovieListStyles>\r\n    );\r\n  }\r\n  if (type === \"now_playing\") {\r\n    return (\r\n      <MovieListStyles>\r\n        {isLoading && (\r\n          <div className=\"grid grid-cols-3 gap-x-[40px]\">\r\n            <CardSkeleton className=\"h-[200px]\"></CardSkeleton>\r\n            <CardSkeleton className=\"h-[200px]\"></CardSkeleton>\r\n            <CardSkeleton className=\"h-[200px]\"></CardSkeleton>\r\n          </div>\r\n        )}\r\n        {!isLoading && (\r\n          <div className=\"now_playing\">\r\n            <Swiper\r\n              grabCursor={\"true\"}\r\n              spaceBetween={20}\r\n              slidesPerView={\"auto\"}\r\n            >\r\n              {movies.length > 0 &&\r\n                type === \"now_playing\" &&\r\n                movies.map((item) => (\r\n                  <SwiperSlide key={item.id}>\r\n                    <MovieCardV2 item={item} cate=\"now_playing\"></MovieCardV2>\r\n                  </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n          </div>\r\n        )}\r\n      </MovieListStyles>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Heading from \"../heading/Heading\";\r\nimport MovieList from \"../movie/MovieList\";\r\nconst genres = [\r\n  {\r\n    id: 1,\r\n    title: \"Action\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Western\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Thrille\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Adventures\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Drama\",\r\n  },\r\n];\r\nconst TrailerStyles = styled.div`\r\n  max-width: 300px;\r\n  width: 100%;\r\n\r\n`;\r\nconst Trailer = () => {\r\n  return (\r\n    <TrailerStyles>\r\n      <Heading>Coming soon</Heading>\r\n      <div className=\"card\">\r\n        <MovieList type={\"upcoming\"}></MovieList>\r\n      </div>\r\n      <div className=\"favourite\">\r\n        <Heading>Favourite genres</Heading>\r\n        <div className=\"genres\">\r\n          {genres.length > 0 &&\r\n            genres.map((item) => <span key={item.id}>{item.title}</span>)}\r\n        </div>\r\n      </div>\r\n    </TrailerStyles>\r\n  );\r\n};\r\n\r\nexport default Trailer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Heading from \"../components/heading/Heading\";\r\nimport MovieList from \"../components/movie/MovieList\";\r\nimport Trailer from \"../components/trailer/Trailer\";\r\n\r\nconst HomePageStyles = styled.div`\r\n  padding-bottom: 60px;\r\n  .main-content {\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 0px 40px;\r\n  }\r\n\r\n  .card {\r\n    width: 100%;\r\n  }\r\n  ////////\r\n  .content {\r\n    flex: 1;\r\n    padding-left: 40px;\r\n    border-left: 1px solid rgba(255, 255, 255, 0.1);\r\n  }\r\n  .popular {\r\n    margin-bottom: 40px;\r\n  }\r\n  .heading-top {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 30px;\r\n    .heading {\r\n      margin-bottom: 0;\r\n    }\r\n    &-right {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 15px;\r\n    }\r\n  }\r\n  .rate {\r\n    margin-bottom: 40px;\r\n  }\r\n  .favourite {\r\n    margin-top: 40px;\r\n  }\r\n  .genres {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 15px;\r\n    span {\r\n      padding: 8px 15px;\r\n      border-radius: 10px;\r\n      &:nth-child(1) {\r\n        background: #937dc2;\r\n      }\r\n      &:nth-child(2) {\r\n        background: #f96666;\r\n      }\r\n      &:nth-child(3) {\r\n        background: #d58bdd;\r\n      }\r\n      &:nth-child(4) {\r\n        background: #31c6d4;\r\n      }\r\n      &:nth-child(5) {\r\n        background: #ff74b1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <HomePageStyles>\r\n      <div className=\"container\">\r\n        <div className=\"main-content\">\r\n          <Trailer></Trailer>\r\n          <div className=\"content\">\r\n            <div className=\"popular\">\r\n              <Heading className=\"heading\">Popular Movie</Heading>\r\n              <div className=\"card\">\r\n                <MovieList type={\"popular\"}></MovieList>\r\n              </div>\r\n            </div>\r\n            <div className=\"rate\">\r\n              <Heading>Top rated movies</Heading>\r\n              <div className=\"card\">\r\n                <MovieList type={\"top_rated\"}></MovieList>\r\n              </div>\r\n            </div>\r\n            <div className=\"now\">\r\n              <Heading>Now playing</Heading>\r\n              <div className=\"card\">\r\n                <MovieList type={\"now_playing\"}></MovieList>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HomePageStyles>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["MovieCardStyles","styled","props","cate","css","theme","redLight","item","className","poster_path","title","vote_average","release_date","id","navigate","useNavigate","onClick","src","tmdbAPI","alt","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","toFixed","CardStyles","CardSkeleton","width","height","radius","MovieCardV2Styles","HeadingStyles","children","MovieListStyles","type","useSWR","fetcher","data","error","isLoading","movies","results","length","slice","map","MovieCard","grabCursor","spaceBetween","slidesPerView","MovieCardV2","genres","TrailerStyles","HomePageStyles"],"sourceRoot":""}