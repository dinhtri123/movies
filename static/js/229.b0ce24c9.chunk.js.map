{"version":3,"file":"static/js/229.b0ce24c9.chunk.js","mappings":"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","sources":["components/movie/MovieCard.js","components/movie/MovieCardV2.js","components/video/VideoTrailer.js","page/MovieDetailsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { tmdbAPI } from \"../../apiConfig\";\r\nimport LoadingSkeleton from \"../loading/LoadingSkeleton\";\r\n\r\nconst MovieCardStyles = styled.div`\r\n  cursor: pointer;\r\n  ${(props) =>\r\n    (props.cate === \"upcoming\" ||\r\n      props.cate === \"top_rated\" ||\r\n      props.cate === \"now_playing\") &&\r\n    css`\r\n      height: 200px;\r\n    `};\r\n  ${(props) =>\r\n    props.cate === \"popular\" &&\r\n    css`\r\n      height: 250px;\r\n    `};\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  .image {\r\n    position: absolute;\r\n    inset: 0;\r\n    z-index: -1;\r\n  }\r\n  .overlay {\r\n    position: absolute;\r\n    inset: 0;\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n  img {\r\n    object-fit: cover;\r\n    background-position: center;\r\n  }\r\n  .card-item {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    background-color: rgba(255, 255, 255, 0);\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    padding: 10px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr 1fr;\r\n    align-items: center;\r\n    transition: all 0.25s linear;\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      inset: 0;\r\n      background: inherit;\r\n      backdrop-filter: blur(3px);\r\n      box-shadow: inset 0 0 2000px rgba(255, 255, 255, 0.1);\r\n      z-index: -1;\r\n    }\r\n  }\r\n  .item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0px 5px;\r\n    line-height: 1.3;\r\n    &-title {\r\n      font-weight: 500;\r\n      font-size: 18px;\r\n    }\r\n    &-since {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  .star {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .number {\r\n    font-size: 16px;\r\n  }\r\n  .icon-star {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n  &:hover > .card-item {\r\n    background: ${(props) => props.theme.redLight};\r\n  }\r\n`;\r\nconst MovieCard = ({ item, cate = \"upcoming\", className = \"\" }) => {\r\n  const { poster_path, title, vote_average, release_date, id } = item;\r\n  const navigate = useNavigate();\r\n  return (\r\n    <MovieCardStyles\r\n      cate={cate}\r\n      className={className}\r\n      onClick={() => navigate(`/movie/${id}`)}\r\n    >\r\n      <div className=\"image\">\r\n        <div className=\"overlay\"></div>\r\n        <img src={tmdbAPI.image(poster_path)} alt=\"poster\" />\r\n      </div>\r\n      <div className=\"card-item\">\r\n        <span className=\"icon\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className=\"w-9 h-9\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z\"\r\n            />\r\n          </svg>\r\n        </span>\r\n        <div className=\"item\">\r\n          <span className=\"item-title\">{title}</span>\r\n          <span className=\"item-since\">{release_date}</span>\r\n        </div>\r\n        <div className=\"star\">\r\n          <span className=\"number\">{vote_average.toFixed(1)}</span>\r\n          <img src=\"/star.png\" alt=\"\" className=\"icon-star\" />\r\n        </div>\r\n      </div>\r\n    </MovieCardStyles>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n\r\nconst CardStyles = styled.div`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  .image {\r\n    position: absolute;\r\n    inset: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\nexport const CardSkeleton = ({ className }) => {\r\n  return (\r\n    <CardStyles className={className}>\r\n      <div className=\"image\">\r\n        <LoadingSkeleton\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          radius=\"10px\"\r\n        ></LoadingSkeleton>\r\n      </div>\r\n    </CardStyles>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { tmdbAPI } from \"../../apiConfig\";\r\nimport Button from \"../button/Button\";\r\n\r\nconst MovieCardV2Styles = styled.div`\r\n  ${(props) =>\r\n    props.cate === \"upcoming\" &&\r\n    css`\r\n      height: 200px;\r\n    `};\r\n  ${(props) =>\r\n    (props.cate === \"top_rated\" || props.cate === \"now_playing\") &&\r\n    css`\r\n      height: 400px;\r\n    `};\r\n  ${(props) =>\r\n    props.cate === \"popular\" &&\r\n    css`\r\n      height: 250px;\r\n    `};\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  padding: 10px;\r\n  transform: scale(1);\r\n  transition: all 0.2s linear;\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    animation: hover 0.2s linear;\r\n  }\r\n  @keyframes hover {\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(1.03);\r\n    }\r\n  }\r\n  .image {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 250px;\r\n  }\r\n  .star {\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 10;\r\n\r\n    border-radius: 50%;\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      inset: 0;\r\n      width: 85%;\r\n      height: 85%;\r\n      border-radius: 50%;\r\n      background-color: #0f0f0f;\r\n      z-index: -1;\r\n      transform: translate(7.5%, 7.5%);\r\n    }\r\n  }\r\n  .overlay {\r\n    position: absolute;\r\n    inset: 0;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    border-radius: 10px;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    object-position: top;\r\n    border-radius: 10px;\r\n  }\r\n  .card-item {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    background-color: rgba(255, 255, 255, 0);\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    padding: 12px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all 0.25s linear;\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      inset: 0;\r\n      background: inherit;\r\n      backdrop-filter: blur(3px);\r\n      box-shadow: inset 0 0 2000px rgba(255, 255, 255, 0.1);\r\n    }\r\n    .since {\r\n      font-size: 16px;\r\n      z-index: 1;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MovieCardV2 = ({ item, cate = \"upcoming\", className = \"\" }) => {\r\n  const { poster_path, title, vote_average, release_date, id } = item;\r\n  const navigate = useNavigate();\r\n  if (!item) return;\r\n\r\n  return (\r\n    <MovieCardV2Styles cate={cate} className={className}>\r\n      <div className=\"image\">\r\n        <span\r\n          className={`star ${\r\n            vote_average >= 8\r\n              ? \"bg-[#7dce13] \"\r\n              : vote_average >= 6.5\r\n              ? \"bg-[#E6B325]\"\r\n              : \"bg-[#EB4747]\"\r\n          }`}\r\n        >\r\n          {vote_average.toFixed(1)}\r\n        </span>\r\n        <div className=\"overlay\"></div>\r\n        <img src={tmdbAPI.image(poster_path)} alt=\"poster\" />\r\n        <div className=\"card-item\">\r\n          <span className=\"since\">{release_date}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full h-[130px] flex flex-col justify-between items-center pt-[15px]\">\r\n        <span className=\"flex justify-center font-semibold\">{title}</span>\r\n        <Button\r\n          className=\"w-full h-[50px]\"\r\n          onClick={() => navigate(`/movie/${id}`)}\r\n        >\r\n          Watch now\r\n        </Button>\r\n      </div>\r\n    </MovieCardV2Styles>\r\n  );\r\n};\r\n\r\nexport default MovieCardV2;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbAPI } from \"../../apiConfig\";\r\n\r\nconst TrailerStyles = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  z-index: 999;\r\n  transform: scale(1);\r\n  animation: show 0.1s linear;\r\n  @keyframes show {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  .show_trailer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    button {\r\n      position: absolute;\r\n      top: 50px;\r\n      right: 50px;\r\n      font-size: 50px;\r\n      &:hover {\r\n        color: ${(props) => props.theme.redLight};\r\n      }\r\n    }\r\n  }\r\n  .error {\r\n    font-size: 50px;\r\n    font-weight: 600;\r\n    background: -webkit-linear-gradient(\r\n      ${(props) => props.theme.redLight},\r\n      #6a5af9\r\n    );\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n`;\r\nconst VideoTrailer = ({ clickHandleHide, clickClose }) => {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieDetailsInfo(movieId, \"videos\"), fetcher);\r\n  if (!data) return;\r\n  const trailer = data?.results || [];\r\n  return (\r\n    <TrailerStyles onClick={clickHandleHide}>\r\n      {trailer.length > 0 &&\r\n        trailer.slice(0, 1).map((item) => (\r\n          <div className=\"show_trailer\" key={item.id}>\r\n            <button onClick={clickClose}>\r\n              <ion-icon name=\"close-outline\"></ion-icon>\r\n            </button>\r\n            <iframe\r\n              width=\"80%\"\r\n              height=\"75%\"\r\n              src={`https://www.youtube.com/embed/${item.key}`}\r\n              title={item.name}\r\n              frameBorder=\"0\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        ))}\r\n      {trailer.length <= 0 && (\r\n        <div className=\"show_trailer\">\r\n          <button onClick={clickClose}>\r\n            <ion-icon name=\"close-outline\"></ion-icon>\r\n          </button>\r\n          <span className=\"error\">Video Trailer Not Found</span>\r\n        </div>\r\n      )}\r\n    </TrailerStyles>\r\n  );\r\n};\r\n\r\nexport default VideoTrailer;\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbAPI } from \"../apiConfig\";\r\nimport Button from \"../components/button/Button\";\r\nimport LoadingSkeleton from \"../components/loading/LoadingSkeleton\";\r\nimport MovieCard from \"../components/movie/MovieCard\";\r\nimport MovieCardV2 from \"../components/movie/MovieCardV2\";\r\nimport VideoTrailer from \"../components/video/VideoTrailer\";\r\n\r\nconst MovieDetailsPageStyles = styled.div`\r\n  position: relative;\r\n  .background {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 600px;\r\n    z-index: -1;\r\n    img {\r\n      object-fit: cover;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .overlay {\r\n      position: absolute;\r\n      inset: 0;\r\n      background: linear-gradient(\r\n        to bottom,\r\n        rgba(255, 255, 255, 0.1) 20%,\r\n        #0f0f0f\r\n      );\r\n      /* backdrop-filter: blur(1px); */\r\n    }\r\n  }\r\n  .main {\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 3fr 1fr;\r\n    gap: 0px 40px;\r\n    margin-top: -100px;\r\n    margin-bottom: 30px;\r\n  }\r\n  .left {\r\n    img {\r\n      width: 100%;\r\n      height: 350px;\r\n      object-fit: cover;\r\n      border-radius: 16px;\r\n    }\r\n    &-content {\r\n      display: flex;\r\n      justify-content: center;\r\n      flex-wrap: wrap;\r\n      margin-top: 20px;\r\n      gap: 20px;\r\n    }\r\n    .rating {\r\n      padding: 8px 15px;\r\n      background: ${(props) => props.theme.redLight};\r\n      border-radius: 10px;\r\n      color: white;\r\n    }\r\n    .reviews {\r\n      padding: 8px 15px;\r\n      background: #31c6d4;\r\n      border-radius: 10px;\r\n      color: white;\r\n    }\r\n  }\r\n  .center {\r\n    padding-top: 40px;\r\n    .title {\r\n      font-size: 30px;\r\n      font-weight: 600;\r\n      color: ${(props) => props.theme.redLight};\r\n    }\r\n    .original_title {\r\n      font-size: 14px;\r\n      padding: 10px 0px;\r\n    }\r\n    .share {\r\n      display: flex;\r\n      gap: 20px;\r\n      align-items: center;\r\n      margin: 15px 0px;\r\n    }\r\n    .overview {\r\n      margin: 25px 0px;\r\n    }\r\n    .detail {\r\n      h4 {\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n    .info {\r\n      display: flex;\r\n      gap: 20px;\r\n      padding-bottom: 7px;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n      margin-bottom: 15px;\r\n      .details_title {\r\n        width: 150px;\r\n        font-weight: 500;\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n      .details_value {\r\n        color: #bebebe;\r\n      }\r\n      .genres_value {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px 15px;\r\n        span {\r\n          padding: 8px 15px;\r\n          background: ${(props) => props.theme.redLight};\r\n          border-radius: 12px;\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .right {\r\n    padding-top: 40px;\r\n    position: relative;\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 20%;\r\n      background: linear-gradient(\r\n        to bottom,\r\n        rgba(255, 255, 255, 0.001) 10%,\r\n        #0f0f0f 50%\r\n      );\r\n      /* backdrop-filter: blur(-1px); */\r\n      z-index: 20;\r\n    }\r\n    h4 {\r\n      font-size: 25px;\r\n      font-weight: 600;\r\n      margin-bottom: 20px;\r\n    }\r\n    .content {\r\n      margin-bottom: 30px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 20px 0px;\r\n      max-height: 500px;\r\n      height: 100%;\r\n      overflow-y: auto;\r\n      position: relative;\r\n\r\n      .card {\r\n        display: flex;\r\n        gap: 0px 20px;\r\n        &:last-child {\r\n          margin-bottom: 60px;\r\n        }\r\n\r\n        img {\r\n          width: 60px;\r\n          height: 60px;\r\n          border-radius: 50%;\r\n          object-fit: cover;\r\n        }\r\n        .content-right {\r\n          flex: 1;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          .cast_title {\r\n            font-weight: 600;\r\n            font-size: 16px;\r\n          }\r\n          .cast_add {\r\n            color: #bebebe;\r\n            font-size: 15px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .similar {\r\n    margin-bottom: 40px;\r\n    h3 {\r\n      font-size: 25px;\r\n      font-weight: 550;\r\n      margin-bottom: 40px;\r\n      position: relative;\r\n      padding-bottom: 10px;\r\n      &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0px;\r\n        width: 80px;\r\n        height: 5px;\r\n        border-radius: 10px;\r\n        background-color: ${(props) => props.theme.redLight};\r\n      }\r\n    }\r\n    .swiper {\r\n      display: flex;\r\n    }\r\n    .swiper-wrapper {\r\n      user-select: none;\r\n      width: 300px;\r\n    }\r\n  }\r\n`;\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  const { data, error } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\r\n  const [show, setShow] = useState(false);\r\n  if (!data) return;\r\n  const isLoading = !data && !error;\r\n  const {\r\n    backdrop_path,\r\n    poster_path,\r\n    release_date,\r\n    vote_average,\r\n    vote_count,\r\n    title,\r\n    original_title,\r\n    overview,\r\n    genres,\r\n    production_countries,\r\n    runtime,\r\n  } = data;\r\n  const handleHide = (e) => {\r\n    if (!e.target.matches(\"iframe\")) {\r\n      setShow(false);\r\n    }\r\n  };\r\n  return (\r\n    <MovieDetailsPageStyles>\r\n      <div className=\"background\">\r\n        {isLoading && (\r\n          <LoadingSkeleton width=\"100%\" height=\"600px\"></LoadingSkeleton>\r\n        )}\r\n        {!isLoading && (\r\n          <>\r\n            <img src={tmdbAPI.image(backdrop_path)} alt=\"background_details\" />\r\n            <div className=\"overlay\"></div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"container main\">\r\n        <div className=\"left\">\r\n          {isLoading && (\r\n            <LoadingSkeleton\r\n              width=\"100%\"\r\n              height=\"350px\"\r\n              radius=\"16px\"\r\n            ></LoadingSkeleton>\r\n          )}\r\n          {!isLoading && (\r\n            <img src={tmdbAPI.image(poster_path)} alt=\"poster_details\" />\r\n          )}\r\n\r\n          <div className=\"left-content\">\r\n            {isLoading && (\r\n              <>\r\n                <LoadingSkeleton\r\n                  width=\"180px\"\r\n                  height=\"50px\"\r\n                  radius=\"8px\"\r\n                ></LoadingSkeleton>\r\n                <LoadingSkeleton\r\n                  width=\"180px\"\r\n                  height=\"50px\"\r\n                  radius=\"8px\"\r\n                ></LoadingSkeleton>\r\n              </>\r\n            )}\r\n            {!isLoading && (\r\n              <>\r\n                <span className=\"rating\">{vote_average} ratings</span>\r\n                <span className=\"reviews\">{vote_count} reviews</span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"center\">\r\n          {isLoading && (\r\n            <div className=\"flex flex-col gap-[10px]\">\r\n              <LoadingSkeleton\r\n                width=\"500px\"\r\n                height=\"50px\"\r\n                radius=\"5px\"\r\n              ></LoadingSkeleton>\r\n              <LoadingSkeleton\r\n                width=\"300px\"\r\n                height=\"30px\"\r\n                radius=\"5px\"\r\n              ></LoadingSkeleton>\r\n              <LoadingSkeleton\r\n                width=\"100px\"\r\n                height=\"30px\"\r\n                radius=\"5px\"\r\n              ></LoadingSkeleton>\r\n              <LoadingSkeleton\r\n                width=\"200px\"\r\n                height=\"50px\"\r\n                radius=\"5px\"\r\n              ></LoadingSkeleton>\r\n              <LoadingSkeleton\r\n                width=\"100%\"\r\n                height=\"200px\"\r\n                radius=\"5px\"\r\n              ></LoadingSkeleton>\r\n              <LoadingSkeleton\r\n                width=\"100%\"\r\n                height=\"150px\"\r\n                radius=\"5px\"\r\n              ></LoadingSkeleton>\r\n            </div>\r\n          )}\r\n          {!isLoading && (\r\n            <>\r\n              <h3 className=\"title\">{title}</h3>\r\n              <p className=\"original_title\">Original title: {original_title}</p>\r\n              <div className=\"date\">{release_date}</div>\r\n              <div className=\"share\">\r\n                <Button onClick={() => setShow(true)}>Watch trailer</Button>\r\n              </div>\r\n              <div className=\"overview\">{overview}</div>\r\n              <div className=\"detail\">\r\n                <h4>Details</h4>\r\n                <div className=\"genres info\">\r\n                  <span className=\"details_title\">Genres</span>\r\n                  <div className=\"genres_value\">\r\n                    {genres.length > 0 &&\r\n                      genres.map((item) => (\r\n                        <span key={item.id} className=\"details_value\">\r\n                          {item.name}\r\n                        </span>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"country info\">\r\n                  <span className=\"details_title\">Country of origin</span>\r\n                  {production_countries.length > 0 &&\r\n                    production_countries.map((item, index) => (\r\n                      <span key={index} className=\"details_value\">\r\n                        {item.name}\r\n                      </span>\r\n                    ))}\r\n                </div>\r\n                <div className=\"runtime info\">\r\n                  <span className=\"details_title\">Runtime</span>\r\n                  <span className=\"details_value\">{runtime} min</span>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"right\">\r\n          {isLoading && (\r\n            <div className=\"flex flex-col gap-[10px]\">\r\n              <LoadingSkeleton\r\n                width=\"100px\"\r\n                height=\"50px\"\r\n                radius=\"5px\"\r\n              ></LoadingSkeleton>\r\n              <LoadingSkeleton\r\n                width=\"100%\"\r\n                height=\"500px\"\r\n                radius=\"5px\"\r\n              ></LoadingSkeleton>\r\n            </div>\r\n          )}\r\n          {!isLoading && (\r\n            <>\r\n              <h4>Cast</h4>\r\n              <div className=\"content\">\r\n                <Cast></Cast>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"similar\">\r\n        <div className=\"container\">\r\n          <h3>Similar Movies</h3>\r\n          <div className=\"similar_content\">\r\n            <Similar></Similar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {show && (\r\n        <VideoTrailer\r\n          clickHandleHide={handleHide}\r\n          clickClose={() => setShow(false)}\r\n        ></VideoTrailer>\r\n      )}\r\n    </MovieDetailsPageStyles>\r\n  );\r\n};\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(\r\n    tmdbAPI.getMovieDetailsInfo(movieId, \"credits\"),\r\n    fetcher\r\n  );\r\n  if (!data) return;\r\n  const cast = data?.cast || [];\r\n  return (\r\n    <>\r\n      {cast.length > 0 &&\r\n        cast.map((item) => (\r\n          <div className=\"card\" key={item.id}>\r\n            <img src={tmdbAPI.image(item.profile_path)} alt=\"\" />\r\n            <div className=\"content-right\">\r\n              <p className=\"cast_title\">{item.name}</p>\r\n              <span className=\"cast_add\">as {item.character}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Similar = () => {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(\r\n    tmdbAPI.getMovieDetailsInfo(movieId, \"similar\"),\r\n    fetcher\r\n  );\r\n  if (!data) return;\r\n  const similar = data?.results || [];\r\n  return (\r\n    <>\r\n      <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n        {similar.length > 0 &&\r\n          similar.map((item) => (\r\n            <SwiperSlide key={item.id}>\r\n              <MovieCardV2 item={item} cate=\"top_rated\"></MovieCardV2>\r\n            </SwiperSlide>\r\n          ))}\r\n      </Swiper>\r\n    </>\r\n  );\r\n};\r\nexport default MovieDetailsPage;\r\n"],"names":["MovieCardStyles","styled","props","cate","css","theme","redLight","item","className","poster_path","title","vote_average","release_date","id","navigate","useNavigate","onClick","src","tmdbAPI","alt","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","toFixed","CardStyles","CardSkeleton","width","height","radius","MovieCardV2Styles","TrailerStyles","clickHandleHide","clickClose","movieId","useParams","data","useSWR","fetcher","trailer","results","length","slice","map","name","key","frameBorder","allowFullScreen","MovieDetailsPageStyles","Cast","cast","profile_path","character","Similar","similar","grabCursor","spaceBetween","slidesPerView","MovieCardV2","error","useState","show","setShow","isLoading","backdrop_path","vote_count","original_title","overview","genres","production_countries","runtime","LoadingSkeleton","Button","index","e","target","matches"],"sourceRoot":""}